volumes:
  postgres-data:
    external: true

  mongo-data:
    external: trueode

services:
  fastapi:
    build:
      context: sample_service # match service nane
      dockerfile: Dockerfile.dev
    ports:
      - 8000:8000 # "YOUR PORT NUMBER:8000"
    volumes:
      - ./sample_service:/app # match service name

  postgres:
    build:
      context: ./relational-data
      dockerfile: ./Dockerfile.dev
    volumes:
      - postgres-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_MULTIPLE_DATABASES=accounts,inventory,bowls
      - POSTGRES_PASSWORD=test-databases
    ports:
      - 15432:5432 # "YOUR PORT NUMBER:8000"

  mongo:
    image: mongo:5
    volumes:
      - mongo-data:/data/db
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: password
    # other services, too...

  ghi:
    image: node:lts-bullseye
    command: /bin/bash run.sh
    working_dir: /app
    volumes:
      - ./ghi:/app
    ports:
      - "3000:3000"
    environment:
      HOST_OS: ${OS}
      NODE_ENV: development
      HOST: "0.0.0.0"
      # For each back-end service that you want your front-end to communicate with, add an environment variable that starts with REACT_APP_ and the URL it should use, eg:
      # REACT_APP_FASTAPI_SERVICE: http://localhost:8000
      # REACT_APP_THIRD_PARTY_SERVICE: http://third-party.com
      REACT_APP_API_HOST: http://localhost:8000
