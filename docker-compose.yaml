volumes:
    mongo-data:
        external: true

services:
  user:
    build:
      context: user_service
      dockerfile: Dockerfile.dev
    ports:
      - 8000:8000
    volumes:
      - ./user_service:/app
    environment:
      DATABASE_URL: mongodb://user:userpw@mongo
      DATABASE_NAME: userdb
      WAIT_HOSTS: mongo:27017

  post:
    build:
      context: post_service
      dockerfile: Dockerfile.dev
    ports:
      - 8001:8000
    volumes:
      - ./post_service:/app
    environment:
      DATABASE_URL: mongodb://user:userpw@mongo
      DATABASE_NAME: userdb
      WAIT_HOSTS: mongo:27017
  
  
  react:
    image: node:lts-bullseye
    command: /bin/bash run.sh
    working_dir: /app
    volumes:
      - ./ghi:/app
    ports:
      - "3000:3000"
    environment:
      HOST_OS: ${OS}
      NODE_ENV: development
      HOST: "0.0.0.0"
      REACT_APP_API_HOST: http://localhost:8000
  mongo:
    image: mongo:5
    volumes:
      - mongo-data:/data/db
      # - ./data:/docker-entrypoint-initdb.d
    environment:
      MONGO_INITDB_ROOT_USERNAME: user
      MONGO_INITDB_ROOT_PASSWORD: userpw
    # ports:
    #   - "27017:27017"
  mongo-express:
    image: mongo-express:latest
    depends_on:
      - mongo
    ports:
      - "8081:8081"
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: user
      ME_CONFIG_MONGODB_ADMINPASSWORD: userpw
      ME_CONFIG_MONGODB_URL: mongodb://user:userpw@mongo:27017/

  post-poller:
        build:
            context: ./post_service/poll
            dockerfile: ./Dockerfile.dev
        volumes:
            - ./post_service:/app
        depends_on:
            - post
            - mongo
        environment:
            DATABASE_URL: mongodb://user:userpw@mongo
            DATABASE_NAME: userdb
            WAIT_HOSTS: mongo:27017
            USERS_API: http://users:8000